{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hoday\\\\Desktop\\\\final project\\\\babyapp\\\\src\\\\components\\\\image.js\",\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nexport default function Image() {\n  _s3();\n\n  const [images] = useState();\n\n  const handleText = i => {\n    var _s = $RefreshSig$();\n\n    return _s(e => {\n      _s();\n\n      let images = [...images];\n      images[i] = e.target.value;\n      useImages({\n        images\n      });\n    }, \"L+PAvZO3L5wYvxAvfEvwGOpj/dQ=\", true);\n  };\n\n  const handleDelete = i => {\n    var _s2 = $RefreshSig$();\n\n    return _s2(e => {\n      _s2();\n\n      e.preventDefault();\n      let images = [...images.slice(0, i), ...images.slice(i + 1)];\n      useImage({\n        images\n      });\n    }, \"s92vA4S4R6IONXG6Tm57AhygzPw=\", true);\n  };\n\n  const addImage = e => {\n    e.preventDefault();\n    let images = images.concat([\"\"]);\n    setImage({\n      images\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [images.map((image, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: () => handleText(index),\n        value: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete(index),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addImage,\n      children: \"Add image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Image, \"YtowcAR67ZehSEdQ484Oe6RS55g=\");\n\n_c = Image;\n\nvar _c;\n\n$RefreshReg$(_c, \"Image\");","map":{"version":3,"sources":["C:/Users/hoday/Desktop/final project/babyapp/src/components/image.js"],"names":["React","useState","useEffect","Image","images","handleText","i","e","target","value","useImages","handleDelete","preventDefault","slice","useImage","addImage","concat","setImage","map","image","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,MAAD,IAAWH,QAAQ,EAAzB;;AAEA,QAAMI,UAAU,GAAIC,CAAD;AAAA;;AAAA,cAAQC,CAAD,IAAO;AAAA;;AAC/B,UAAIH,MAAM,GAAG,CAAC,GAAGA,MAAJ,CAAb;AACAA,MAAAA,MAAM,CAACE,CAAD,CAAN,GAAYC,CAAC,CAACC,MAAF,CAASC,KAArB;AACAC,MAAAA,SAAS,CAAC;AACRN,QAAAA;AADQ,OAAD,CAAT;AAGD,KANkB;AAAA,GAAnB;;AAQA,QAAMO,YAAY,GAAIL,CAAD;AAAA;;AAAA,eAAQC,CAAD,IAAO;AAAA;;AACjCA,MAAAA,CAAC,CAACK,cAAF;AACA,UAAIR,MAAM,GAAG,CAAC,GAAGA,MAAM,CAACS,KAAP,CAAa,CAAb,EAAgBP,CAAhB,CAAJ,EAAwB,GAAGF,MAAM,CAACS,KAAP,CAAaP,CAAC,GAAG,CAAjB,CAA3B,CAAb;AACAQ,MAAAA,QAAQ,CAAC;AACPV,QAAAA;AADO,OAAD,CAAR;AAGD,KANoB;AAAA,GAArB;;AAQA,QAAMW,QAAQ,GAAIR,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACK,cAAF;AACA,QAAIR,MAAM,GAAGA,MAAM,CAACY,MAAP,CAAc,CAAC,EAAD,CAAd,CAAb;AACAC,IAAAA,QAAQ,CAAC;AACPb,MAAAA;AADO,KAAD,CAAR;AAGD,GAND;;AAQA,sBACE,QAAC,QAAD;AAAA,eACGA,MAAM,CAACc,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,MAAMf,UAAU,CAACe,KAAD,CAA7C;AAAsD,QAAA,KAAK,EAAED;AAA7D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAER,YAAY,CAACS,KAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAOE;AAAQ,MAAA,OAAO,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;IAtCuBZ,K;;KAAAA,K","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Image() {\r\n  const [images] = useState();\r\n\r\n  const handleText = (i) => (e) => {\r\n    let images = [...images];\r\n    images[i] = e.target.value;\r\n    useImages({\r\n      images,\r\n    });\r\n  };\r\n\r\n  const handleDelete = (i) => (e) => {\r\n    e.preventDefault();\r\n    let images = [...images.slice(0, i), ...images.slice(i + 1)];\r\n    useImage({\r\n      images,\r\n    });\r\n  };\r\n\r\n  const addImage = (e) => {\r\n    e.preventDefault();\r\n    let images = images.concat([\"\"]);\r\n    setImage({\r\n      images,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {images.map((image, index) => (\r\n        <span key={index}>\r\n          <input type=\"text\" onChange={() => handleText(index)} value={image} />\r\n          <button onClick={handleDelete(index)}>X</button>\r\n        </span>\r\n      ))}\r\n      <button onClick={addImage}>Add image</button>\r\n    </Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}