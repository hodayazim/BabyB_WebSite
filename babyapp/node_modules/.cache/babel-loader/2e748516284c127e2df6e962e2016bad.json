{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hoday\\\\Desktop\\\\final project\\\\babyapp\\\\src\\\\components\\\\image.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nexport default function Image() {\n  _s();\n\n  const [images, setImage] = useState();\n\n  const handleText = i => e => {\n    const images = [...images];\n    images[i] = e.target.value;\n    setImage(images);\n  };\n\n  const handleDelete = i => e => {\n    e.preventDefault();\n    const images = [...images.slice(0, i), ...images.slice(i + 1)];\n    setImage(images);\n  };\n\n  const addImage = e => {\n    e.preventDefault();\n    const images = newimages.concat([\"\"]);\n    setImage(images);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [images.map((image, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: () => handleText(index),\n        value: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete(index),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addImage,\n      children: \"Add image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Image, \"nx99yOURFdIhJQb+Trd2d03Br6I=\");\n\n_c = Image;\n\nvar _c;\n\n$RefreshReg$(_c, \"Image\");","map":{"version":3,"sources":["C:/Users/hoday/Desktop/final project/babyapp/src/components/image.js"],"names":["React","useState","useEffect","Image","images","setImage","handleText","i","e","target","value","handleDelete","preventDefault","slice","addImage","newimages","concat","map","image","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBJ,QAAQ,EAAnC;;AAEA,QAAMK,UAAU,GAAIC,CAAD,IAAQC,CAAD,IAAO;AAC/B,UAAMJ,MAAM,GAAG,CAAC,GAAGA,MAAJ,CAAf;AACAA,IAAAA,MAAM,CAACG,CAAD,CAAN,GAAYC,CAAC,CAACC,MAAF,CAASC,KAArB;AACAL,IAAAA,QAAQ,CAACD,MAAD,CAAR;AACD,GAJD;;AAMA,QAAMO,YAAY,GAAIJ,CAAD,IAAQC,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMR,MAAM,GAAG,CAAC,GAAGA,MAAM,CAACS,KAAP,CAAa,CAAb,EAAgBN,CAAhB,CAAJ,EAAwB,GAAGH,MAAM,CAACS,KAAP,CAAaN,CAAC,GAAG,CAAjB,CAA3B,CAAf;AACAF,IAAAA,QAAQ,CAACD,MAAD,CAAR;AACD,GAJD;;AAMA,QAAMU,QAAQ,GAAIN,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMR,MAAM,GAAGW,SAAS,CAACC,MAAV,CAAiB,CAAC,EAAD,CAAjB,CAAf;AACAX,IAAAA,QAAQ,CAACD,MAAD,CAAR;AACD,GAJD;;AAMA,sBACE;AAAA,eACGA,MAAM,CAACa,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,MAAMb,UAAU,CAACa,KAAD,CAA7C;AAAsD,QAAA,KAAK,EAAED;AAA7D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEP,YAAY,CAACQ,KAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAOE;AAAQ,MAAA,OAAO,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAhCuBX,K;;KAAAA,K","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Image() {\r\n  const [images, setImage] = useState();\r\n\r\n  const handleText = (i) => (e) => {\r\n    const images = [...images];\r\n    images[i] = e.target.value;\r\n    setImage(images);\r\n  };\r\n\r\n  const handleDelete = (i) => (e) => {\r\n    e.preventDefault();\r\n    const images = [...images.slice(0, i), ...images.slice(i + 1)];\r\n    setImage(images);\r\n  };\r\n\r\n  const addImage = (e) => {\r\n    e.preventDefault();\r\n    const images = newimages.concat([\"\"]);\r\n    setImage(images);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {images.map((image, index) => (\r\n        <span key={index}>\r\n          <input type=\"text\" onChange={() => handleText(index)} value={image} />\r\n          <button onClick={handleDelete(index)}>X</button>\r\n        </span>\r\n      ))}\r\n      <button onClick={addImage}>Add image</button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}