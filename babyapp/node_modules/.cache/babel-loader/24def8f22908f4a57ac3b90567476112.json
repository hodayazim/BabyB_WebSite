{"ast":null,"code":"/**\n * @dynamic is for runtime initializing DomHandler.browser\n *\n * If delete below comment, we can see this error message:\n *  Metadata collected contains an error that will be reported at runtime:\n *  Only initialized variables and constants can be referenced\n *  because the value of this variable is needed by the template compiler.\n */\n// @dynamic\nclass DomHandler {\n  static addClass(element, className) {\n    if (element.classList) element.classList.add(className);else element.className += ' ' + className;\n  }\n\n  static addMultipleClasses(element, className) {\n    if (element.classList) {\n      let styles = className.trim().split(' ');\n\n      for (let i = 0; i < styles.length; i++) {\n        element.classList.add(styles[i]);\n      }\n    } else {\n      let styles = className.split(' ');\n\n      for (let i = 0; i < styles.length; i++) {\n        element.className += ' ' + styles[i];\n      }\n    }\n  }\n\n  static removeClass(element, className) {\n    if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n  }\n\n  static hasClass(element, className) {\n    if (element.classList) return element.classList.contains(className);else return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n  }\n\n  static siblings(element) {\n    return Array.prototype.filter.call(element.parentNode.children, function (child) {\n      return child !== element;\n    });\n  }\n\n  static find(element, selector) {\n    return Array.from(element.querySelectorAll(selector));\n  }\n\n  static findSingle(element, selector) {\n    if (element) {\n      return element.querySelector(selector);\n    }\n\n    return null;\n  }\n\n  static index(element) {\n    let children = element.parentNode.childNodes;\n    let num = 0;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i] == element) return num;\n      if (children[i].nodeType == 1) num++;\n    }\n\n    return -1;\n  }\n\n  static indexWithinGroup(element, attributeName) {\n    let children = element.parentNode ? element.parentNode.childNodes : [];\n    let num = 0;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i] == element) return num;\n      if (children[i].attributes && children[i].attributes[attributeName] && children[i].nodeType == 1) num++;\n    }\n\n    return -1;\n  }\n\n  static relativePosition(element, target) {\n    let elementDimensions = element.offsetParent ? {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    } : this.getHiddenElementDimensions(element);\n    const targetHeight = target.offsetHeight;\n    const targetOffset = target.getBoundingClientRect();\n    const viewport = this.getViewport();\n    let top, left;\n\n    if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\n      top = -1 * elementDimensions.height;\n      element.style.transformOrigin = 'bottom';\n\n      if (targetOffset.top + top < 0) {\n        top = -1 * targetOffset.top;\n      }\n    } else {\n      top = targetHeight;\n      element.style.transformOrigin = 'top';\n    }\n\n    if (elementDimensions.width > viewport.width) {\n      // element wider then viewport and cannot fit on screen (align at left side of viewport)\n      left = targetOffset.left * -1;\n    } else if (targetOffset.left + elementDimensions.width > viewport.width) {\n      // element wider then viewport but can be fit on screen (align at right side of viewport)\n      left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;\n    } else {\n      // element fits on screen (align with target)\n      left = 0;\n    }\n\n    element.style.top = top + 'px';\n    element.style.left = left + 'px';\n  }\n\n  static absolutePosition(element, target) {\n    let elementDimensions = element.offsetParent ? {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    } : this.getHiddenElementDimensions(element);\n    let elementOuterHeight = elementDimensions.height;\n    let elementOuterWidth = elementDimensions.width;\n    let targetOuterHeight = target.offsetHeight;\n    let targetOuterWidth = target.offsetWidth;\n    let targetOffset = target.getBoundingClientRect();\n    let windowScrollTop = this.getWindowScrollTop();\n    let windowScrollLeft = this.getWindowScrollLeft();\n    let viewport = this.getViewport();\n    let top, left;\n\n    if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n      top = targetOffset.top + windowScrollTop - elementOuterHeight;\n      element.style.transformOrigin = 'bottom';\n\n      if (top < 0) {\n        top = windowScrollTop;\n      }\n    } else {\n      top = targetOuterHeight + targetOffset.top + windowScrollTop;\n      element.style.transformOrigin = 'top';\n    }\n\n    if (targetOffset.left + elementOuterWidth > viewport.width) left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);else left = targetOffset.left + windowScrollLeft;\n    element.style.top = top + 'px';\n    element.style.left = left + 'px';\n  }\n\n  static getParents(element, parents = []) {\n    return element['parentNode'] === null ? parents : this.getParents(element.parentNode, parents.concat([element.parentNode]));\n  }\n\n  static getScrollableParents(element) {\n    let scrollableParents = [];\n\n    if (element) {\n      let parents = this.getParents(element);\n      const overflowRegex = /(auto|scroll)/;\n\n      const overflowCheck = node => {\n        let styleDeclaration = window['getComputedStyle'](node, null);\n        return overflowRegex.test(styleDeclaration.getPropertyValue('overflow')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowX')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowY'));\n      };\n\n      for (let parent of parents) {\n        let scrollSelectors = parent.nodeType === 1 && parent.dataset['scrollselectors'];\n\n        if (scrollSelectors) {\n          let selectors = scrollSelectors.split(',');\n\n          for (let selector of selectors) {\n            let el = this.findSingle(parent, selector);\n\n            if (el && overflowCheck(el)) {\n              scrollableParents.push(el);\n            }\n          }\n        }\n      }\n    }\n\n    return scrollableParents;\n  }\n\n  static getHiddenElementOuterHeight(element) {\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    let elementHeight = element.offsetHeight;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n    return elementHeight;\n  }\n\n  static getHiddenElementOuterWidth(element) {\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    let elementWidth = element.offsetWidth;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n    return elementWidth;\n  }\n\n  static getHiddenElementDimensions(element) {\n    let dimensions = {};\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    dimensions.width = element.offsetWidth;\n    dimensions.height = element.offsetHeight;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n    return dimensions;\n  }\n\n  static scrollInView(container, item) {\n    let borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');\n    let borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;\n    let paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');\n    let paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n    let containerRect = container.getBoundingClientRect();\n    let itemRect = item.getBoundingClientRect();\n    let offset = itemRect.top + document.body.scrollTop - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n    let scroll = container.scrollTop;\n    let elementHeight = container.clientHeight;\n    let itemHeight = this.getOuterHeight(item);\n\n    if (offset < 0) {\n      container.scrollTop = scroll + offset;\n    } else if (offset + itemHeight > elementHeight) {\n      container.scrollTop = scroll + offset - elementHeight + itemHeight;\n    }\n  }\n\n  static fadeIn(element, duration) {\n    element.style.opacity = 0;\n    let last = +new Date();\n    let opacity = 0;\n\n    let tick = function () {\n      opacity = +element.style.opacity.replace(\",\", \".\") + (new Date().getTime() - last) / duration;\n      element.style.opacity = opacity;\n      last = +new Date();\n\n      if (+opacity < 1) {\n        window.requestAnimationFrame && requestAnimationFrame(tick) || setTimeout(tick, 16);\n      }\n    };\n\n    tick();\n  }\n\n  static fadeOut(element, ms) {\n    var opacity = 1,\n        interval = 50,\n        duration = ms,\n        gap = interval / duration;\n    let fading = setInterval(() => {\n      opacity = opacity - gap;\n\n      if (opacity <= 0) {\n        opacity = 0;\n        clearInterval(fading);\n      }\n\n      element.style.opacity = opacity;\n    }, interval);\n  }\n\n  static getWindowScrollTop() {\n    let doc = document.documentElement;\n    return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n  }\n\n  static getWindowScrollLeft() {\n    let doc = document.documentElement;\n    return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n  }\n\n  static matches(element, selector) {\n    var p = Element.prototype;\n\n    var f = p['matches'] || p.webkitMatchesSelector || p['mozMatchesSelector'] || p['msMatchesSelector'] || function (s) {\n      return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n    };\n\n    return f.call(element, selector);\n  }\n\n  static getOuterWidth(el, margin) {\n    let width = el.offsetWidth;\n\n    if (margin) {\n      let style = getComputedStyle(el);\n      width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    }\n\n    return width;\n  }\n\n  static getHorizontalPadding(el) {\n    let style = getComputedStyle(el);\n    return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n  }\n\n  static getHorizontalMargin(el) {\n    let style = getComputedStyle(el);\n    return parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n  }\n\n  static innerWidth(el) {\n    let width = el.offsetWidth;\n    let style = getComputedStyle(el);\n    width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    return width;\n  }\n\n  static width(el) {\n    let width = el.offsetWidth;\n    let style = getComputedStyle(el);\n    width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    return width;\n  }\n\n  static getInnerHeight(el) {\n    let height = el.offsetHeight;\n    let style = getComputedStyle(el);\n    height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n    return height;\n  }\n\n  static getOuterHeight(el, margin) {\n    let height = el.offsetHeight;\n\n    if (margin) {\n      let style = getComputedStyle(el);\n      height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n    }\n\n    return height;\n  }\n\n  static getHeight(el) {\n    let height = el.offsetHeight;\n    let style = getComputedStyle(el);\n    height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n    return height;\n  }\n\n  static getWidth(el) {\n    let width = el.offsetWidth;\n    let style = getComputedStyle(el);\n    width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n    return width;\n  }\n\n  static getViewport() {\n    let win = window,\n        d = document,\n        e = d.documentElement,\n        g = d.getElementsByTagName('body')[0],\n        w = win.innerWidth || e.clientWidth || g.clientWidth,\n        h = win.innerHeight || e.clientHeight || g.clientHeight;\n    return {\n      width: w,\n      height: h\n    };\n  }\n\n  static getOffset(el) {\n    var rect = el.getBoundingClientRect();\n    return {\n      top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\n      left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0)\n    };\n  }\n\n  static replaceElementWith(element, replacementElement) {\n    let parentNode = element.parentNode;\n    if (!parentNode) throw `Can't replace element`;\n    return parentNode.replaceChild(replacementElement, element);\n  }\n\n  static getUserAgent() {\n    return navigator.userAgent;\n  }\n\n  static isIE() {\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf('MSIE ');\n\n    if (msie > 0) {\n      // IE 10 or older => return version number\n      return true;\n    }\n\n    var trident = ua.indexOf('Trident/');\n\n    if (trident > 0) {\n      // IE 11 => return version number\n      var rv = ua.indexOf('rv:');\n      return true;\n    }\n\n    var edge = ua.indexOf('Edge/');\n\n    if (edge > 0) {\n      // Edge (IE 12+) => return version number\n      return true;\n    } // other browser\n\n\n    return false;\n  }\n\n  static isIOS() {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];\n  }\n\n  static isAndroid() {\n    return /(android)/i.test(navigator.userAgent);\n  }\n\n  static appendChild(element, target) {\n    if (this.isElement(target)) target.appendChild(element);else if (target.el && target.el.nativeElement) target.el.nativeElement.appendChild(element);else throw 'Cannot append ' + target + ' to ' + element;\n  }\n\n  static removeChild(element, target) {\n    if (this.isElement(target)) target.removeChild(element);else if (target.el && target.el.nativeElement) target.el.nativeElement.removeChild(element);else throw 'Cannot remove ' + element + ' from ' + target;\n  }\n\n  static removeElement(element) {\n    if (!('remove' in Element.prototype)) element.parentNode.removeChild(element);else element.remove();\n  }\n\n  static isElement(obj) {\n    return typeof HTMLElement === \"object\" ? obj instanceof HTMLElement : obj && typeof obj === \"object\" && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === \"string\";\n  }\n\n  static calculateScrollbarWidth(el) {\n    if (el) {\n      let style = getComputedStyle(el);\n      return el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth);\n    } else {\n      if (this.calculatedScrollbarWidth !== null) return this.calculatedScrollbarWidth;\n      let scrollDiv = document.createElement(\"div\");\n      scrollDiv.className = \"p-scrollbar-measure\";\n      document.body.appendChild(scrollDiv);\n      let scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n      this.calculatedScrollbarWidth = scrollbarWidth;\n      return scrollbarWidth;\n    }\n  }\n\n  static calculateScrollbarHeight() {\n    if (this.calculatedScrollbarHeight !== null) return this.calculatedScrollbarHeight;\n    let scrollDiv = document.createElement(\"div\");\n    scrollDiv.className = \"p-scrollbar-measure\";\n    document.body.appendChild(scrollDiv);\n    let scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n    document.body.removeChild(scrollDiv);\n    this.calculatedScrollbarWidth = scrollbarHeight;\n    return scrollbarHeight;\n  }\n\n  static invokeElementMethod(element, methodName, args) {\n    element[methodName].apply(element, args);\n  }\n\n  static clearSelection() {\n    if (window.getSelection) {\n      if (window.getSelection().empty) {\n        window.getSelection().empty();\n      } else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n        window.getSelection().removeAllRanges();\n      }\n    } else if (document['selection'] && document['selection'].empty) {\n      try {\n        document['selection'].empty();\n      } catch (error) {//ignore IE bug\n      }\n    }\n  }\n\n  static getBrowser() {\n    if (!this.browser) {\n      let matched = this.resolveUserAgent();\n      this.browser = {};\n\n      if (matched.browser) {\n        this.browser[matched.browser] = true;\n        this.browser['version'] = matched.version;\n      }\n\n      if (this.browser['chrome']) {\n        this.browser['webkit'] = true;\n      } else if (this.browser['webkit']) {\n        this.browser['safari'] = true;\n      }\n    }\n\n    return this.browser;\n  }\n\n  static resolveUserAgent() {\n    let ua = navigator.userAgent.toLowerCase();\n    let match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) || [];\n    return {\n      browser: match[1] || \"\",\n      version: match[2] || \"0\"\n    };\n  }\n\n  static isInteger(value) {\n    if (Number.isInteger) {\n      return Number.isInteger(value);\n    } else {\n      return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n    }\n  }\n\n  static isHidden(element) {\n    return element.offsetParent === null;\n  }\n\n  static getFocusableElements(element) {\n    let focusableElements = DomHandler.find(element, `button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])`);\n    let visibleFocusableElements = [];\n\n    for (let focusableElement of focusableElements) {\n      if (getComputedStyle(focusableElement).display != \"none\" && getComputedStyle(focusableElement).visibility != \"hidden\") visibleFocusableElements.push(focusableElement);\n    }\n\n    return visibleFocusableElements;\n  }\n\n  static generateZIndex() {\n    this.zindex = this.zindex || 999;\n    return ++this.zindex;\n  }\n\n}\n\nDomHandler.zindex = 1000;\nDomHandler.calculatedScrollbarWidth = null;\nDomHandler.calculatedScrollbarHeight = null;\n\nclass ConnectedOverlayScrollHandler {\n  constructor(element, listener = () => {}) {\n    this.element = element;\n    this.listener = listener;\n  }\n\n  bindScrollListener() {\n    this.scrollableParents = DomHandler.getScrollableParents(this.element);\n\n    for (let i = 0; i < this.scrollableParents.length; i++) {\n      this.scrollableParents[i].addEventListener('scroll', this.listener);\n    }\n  }\n\n  unbindScrollListener() {\n    if (this.scrollableParents) {\n      for (let i = 0; i < this.scrollableParents.length; i++) {\n        this.scrollableParents[i].removeEventListener('scroll', this.listener);\n      }\n    }\n  }\n\n  destroy() {\n    this.unbindScrollListener();\n    this.element = null;\n    this.listener = null;\n    this.scrollableParents = null;\n  }\n\n}\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ConnectedOverlayScrollHandler, DomHandler };","map":{"version":3,"sources":["../../src/app/components/dom/domhandler.ts","../../src/app/components/dom/connectedoverlayscrollhandler.ts","../../src/app/components/dom/primeng-dom.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @dynamic is for runtime initializing DomHandler.browser\n *\n * If delete below comment, we can see this error message:\n *  Metadata collected contains an error that will be reported at runtime:\n *  Only initialized variables and constants can be referenced\n *  because the value of this variable is needed by the template compiler.\n */\n// @dynamic\nexport class DomHandler {\n\n    public static zindex: number = 1000;\n\n    private static calculatedScrollbarWidth: number = null;\n\n    private static calculatedScrollbarHeight: number = null;\n\n    private static browser: any;\n\n    public static addClass(element: any, className: string): void {\n        if (element.classList)\n            element.classList.add(className);\n        else\n            element.className += ' ' + className;\n    }\n\n    public static addMultipleClasses(element: any, className: string): void {\n        if (element.classList) {\n            let styles: string[] = className.trim().split(' ');\n            for (let i = 0; i < styles.length; i++) {\n                element.classList.add(styles[i]);\n            }\n\n        }\n        else {\n            let styles: string[] = className.split(' ');\n            for (let i = 0; i < styles.length; i++) {\n                element.className += ' ' + styles[i];\n            }\n        }\n    }\n\n    public static removeClass(element: any, className: string): void {\n        if (element.classList)\n            element.classList.remove(className);\n        else\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n\n    public static hasClass(element: any, className: string): boolean {\n        if (element.classList)\n            return element.classList.contains(className);\n        else\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n    }\n\n    public static siblings(element: any): any {\n        return Array.prototype.filter.call(element.parentNode.children, function (child) {\n            return child !== element;\n        });\n    }\n\n    public static find(element: any, selector: string): any[] {\n        return Array.from(element.querySelectorAll(selector));\n    }\n\n    public static findSingle(element: any, selector: string): any {\n        if (element) {\n            return element.querySelector(selector);\n        }\n        return null;\n    }\n\n    public static index(element: any): number {\n        let children = element.parentNode.childNodes;\n        let num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element) return num;\n            if (children[i].nodeType == 1) num++;\n        }\n        return -1;\n    }\n\n    public static indexWithinGroup(element: any, attributeName: string): number {\n        let children = element.parentNode ? element.parentNode.childNodes : [];\n        let num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element) return num;\n            if (children[i].attributes && children[i].attributes[attributeName] && children[i].nodeType == 1) num++;\n        }\n        return -1;\n    }\n\n    public static relativePosition(element: any, target: any): void {\n        let elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        const targetHeight = target.offsetHeight;\n        const targetOffset = target.getBoundingClientRect();\n        const viewport = this.getViewport();\n        let top: number, left: number;\n\n        if ((targetOffset.top + targetHeight + elementDimensions.height) > viewport.height) {\n            top = -1 * (elementDimensions.height);\n            element.style.transformOrigin = 'bottom';\n            if (targetOffset.top + top < 0) {\n                top = -1 * targetOffset.top;\n            }\n        }\n        else {\n            top = targetHeight;\n            element.style.transformOrigin = 'top';\n        }\n\n        if (elementDimensions.width > viewport.width) {\n            // element wider then viewport and cannot fit on screen (align at left side of viewport)\n            left = targetOffset.left * -1;\n        }\n        else if ((targetOffset.left + elementDimensions.width) > viewport.width) {\n            // element wider then viewport but can be fit on screen (align at right side of viewport)\n            left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;\n        }\n        else {\n            // element fits on screen (align with target)\n            left = 0;\n        }\n\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n    }\n\n    public static absolutePosition(element: any, target: any): void {\n        let elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        let elementOuterHeight = elementDimensions.height;\n        let elementOuterWidth = elementDimensions.width;\n        let targetOuterHeight = target.offsetHeight;\n        let targetOuterWidth = target.offsetWidth;\n        let targetOffset = target.getBoundingClientRect();\n        let windowScrollTop = this.getWindowScrollTop();\n        let windowScrollLeft = this.getWindowScrollLeft();\n        let viewport = this.getViewport();\n        let top, left;\n\n        if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n            top = targetOffset.top + windowScrollTop - elementOuterHeight;\n            element.style.transformOrigin = 'bottom';\n\n            if (top < 0) {\n                top = windowScrollTop;\n            }\n        }\n        else {\n            top = targetOuterHeight + targetOffset.top + windowScrollTop;\n            element.style.transformOrigin = 'top';\n        }\n\n        if (targetOffset.left + elementOuterWidth > viewport.width)\n            left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);\n        else\n            left = targetOffset.left + windowScrollLeft;\n\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n    }\n\n    static getParents(element: any, parents:any = []): any {\n        return element['parentNode'] === null ? parents : this.getParents(element.parentNode, parents.concat([element.parentNode]));\n    }\n\n    static getScrollableParents(element: any) {\n        let scrollableParents = [];\n\n        if (element) {\n            let parents = this.getParents(element);\n            const overflowRegex = /(auto|scroll)/;\n            const overflowCheck = (node: any) => {\n                let styleDeclaration = window['getComputedStyle'](node, null);\n                return overflowRegex.test(styleDeclaration.getPropertyValue('overflow')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowX')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowY'));\n            };\n\n            for (let parent of parents) {\n                let scrollSelectors = parent.nodeType === 1 && parent.dataset['scrollselectors'];\n                if (scrollSelectors) {\n                    let selectors = scrollSelectors.split(',');\n                    for (let selector of selectors) {\n                        let el = this.findSingle(parent, selector);\n                        if (el && overflowCheck(el)) {\n                            scrollableParents.push(el);\n                        }\n                    }\n                }\n            }\n        }\n\n        return scrollableParents;\n    }\n\n    public static getHiddenElementOuterHeight(element: any): number {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        let elementHeight = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n\n        return elementHeight;\n    }\n\n    public static getHiddenElementOuterWidth(element: any): number {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        let elementWidth = element.offsetWidth;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n\n        return elementWidth;\n    }\n\n    public static getHiddenElementDimensions(element: any): any {\n        let dimensions: any = {};\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        dimensions.width = element.offsetWidth;\n        dimensions.height = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n\n        return dimensions;\n    }\n\n    public static scrollInView(container, item) {\n        let borderTopValue: string = getComputedStyle(container).getPropertyValue('borderTopWidth');\n        let borderTop: number = borderTopValue ? parseFloat(borderTopValue) : 0;\n        let paddingTopValue: string = getComputedStyle(container).getPropertyValue('paddingTop');\n        let paddingTop: number = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n        let containerRect = container.getBoundingClientRect();\n        let itemRect = item.getBoundingClientRect();\n        let offset = (itemRect.top + document.body.scrollTop) - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n        let scroll = container.scrollTop;\n        let elementHeight = container.clientHeight;\n        let itemHeight = this.getOuterHeight(item);\n\n        if (offset < 0) {\n            container.scrollTop = scroll + offset;\n        }\n        else if ((offset + itemHeight) > elementHeight) {\n            container.scrollTop = scroll + offset - elementHeight + itemHeight;\n        }\n    }\n\n    public static fadeIn(element, duration: number): void {\n        element.style.opacity = 0;\n\n        let last = +new Date();\n        let opacity = 0;\n        let tick = function () {\n            opacity = +element.style.opacity.replace(\",\", \".\") + (new Date().getTime() - last) / duration;\n            element.style.opacity = opacity;\n            last = +new Date();\n\n            if (+opacity < 1) {\n                (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\n            }\n        };\n\n        tick();\n    }\n\n    public static fadeOut(element, ms) {\n        var opacity = 1,\n            interval = 50,\n            duration = ms,\n            gap = interval / duration;\n\n        let fading = setInterval(() => {\n            opacity = opacity - gap;\n\n            if (opacity <= 0) {\n                opacity = 0;\n                clearInterval(fading);\n            }\n\n            element.style.opacity = opacity;\n        }, interval);\n    }\n\n    public static getWindowScrollTop(): number {\n        let doc = document.documentElement;\n        return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    }\n\n    public static getWindowScrollLeft(): number {\n        let doc = document.documentElement;\n        return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n    }\n\n    public static matches(element, selector: string): boolean {\n        var p = Element.prototype;\n        var f = p['matches'] || p.webkitMatchesSelector || p['mozMatchesSelector'] || p['msMatchesSelector'] || function (s) {\n            return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n        };\n        return f.call(element, selector);\n    }\n\n    public static getOuterWidth(el, margin?) {\n        let width = el.offsetWidth;\n\n        if (margin) {\n            let style = getComputedStyle(el);\n            width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n        }\n\n        return width;\n    }\n\n    public static getHorizontalPadding(el) {\n        let style = getComputedStyle(el);\n        return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    }\n\n    public static getHorizontalMargin(el) {\n        let style = getComputedStyle(el);\n        return parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    }\n\n    public static innerWidth(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n\n        width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    }\n\n    public static width(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    }\n\n    public static getInnerHeight(el) {\n        let height = el.offsetHeight;\n        let style = getComputedStyle(el);\n\n        height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n        return height;\n    }\n\n    public static getOuterHeight(el, margin?) {\n        let height = el.offsetHeight;\n\n        if (margin) {\n            let style = getComputedStyle(el);\n            height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n        }\n\n        return height;\n    }\n\n    public static getHeight(el): number {\n        let height = el.offsetHeight;\n        let style = getComputedStyle(el);\n\n        height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n\n        return height;\n    }\n\n    public static getWidth(el): number {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n\n        return width;\n    }\n\n    public static getViewport(): any {\n        let win = window,\n            d = document,\n            e = d.documentElement,\n            g = d.getElementsByTagName('body')[0],\n            w = win.innerWidth || e.clientWidth || g.clientWidth,\n            h = win.innerHeight || e.clientHeight || g.clientHeight;\n\n        return { width: w, height: h };\n    }\n\n    public static getOffset(el) {\n        var rect = el.getBoundingClientRect();\n\n        return {\n            top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\n            left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0),\n        };\n    }\n\n    public static replaceElementWith(element: any, replacementElement: any): any {\n        let parentNode = element.parentNode;\n        if (!parentNode)\n            throw `Can't replace element`;\n        return parentNode.replaceChild(replacementElement, element);\n    }\n\n    public static getUserAgent(): string {\n        return navigator.userAgent;\n    }\n\n    public static  isIE() {\n        var ua = window.navigator.userAgent;\n\n        var msie = ua.indexOf('MSIE ');\n        if (msie > 0) {\n            // IE 10 or older => return version number\n            return true;\n        }\n\n        var trident = ua.indexOf('Trident/');\n        if (trident > 0) {\n            // IE 11 => return version number\n            var rv = ua.indexOf('rv:');\n            return true;\n        }\n\n        var edge = ua.indexOf('Edge/');\n        if (edge > 0) {\n           // Edge (IE 12+) => return version number\n           return true;\n        }\n\n        // other browser\n        return false;\n    }\n\n    public static isIOS() {\n        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];\n    }\n\n    public static isAndroid() {\n        return /(android)/i.test(navigator.userAgent);\n    }\n\n    public static appendChild(element: any, target: any) {\n        if (this.isElement(target))\n            target.appendChild(element);\n        else if (target.el && target.el.nativeElement)\n            target.el.nativeElement.appendChild(element);\n        else\n            throw 'Cannot append ' + target + ' to ' + element;\n    }\n\n    public static removeChild(element: any, target: any) {\n        if (this.isElement(target))\n            target.removeChild(element);\n        else if (target.el && target.el.nativeElement)\n            target.el.nativeElement.removeChild(element);\n        else\n            throw 'Cannot remove ' + element + ' from ' + target;\n    }\n\n    public static removeElement(element: Element) {\n        if (!('remove' in Element.prototype))\n            element.parentNode.removeChild(element);\n        else\n            element.remove();\n    }\n\n    public static isElement(obj: any) {\n        return (typeof HTMLElement === \"object\" ? obj instanceof HTMLElement :\n            obj && typeof obj === \"object\" && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === \"string\"\n        );\n    }\n\n    public static calculateScrollbarWidth(el?: HTMLElement): number {\n        if (el) {\n            let style = getComputedStyle(el);\n            return (el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth));\n        }\n        else {\n            if (this.calculatedScrollbarWidth !== null)\n                return this.calculatedScrollbarWidth;\n\n            let scrollDiv = document.createElement(\"div\");\n            scrollDiv.className = \"p-scrollbar-measure\";\n            document.body.appendChild(scrollDiv);\n\n            let scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            document.body.removeChild(scrollDiv);\n\n            this.calculatedScrollbarWidth = scrollbarWidth;\n\n            return scrollbarWidth;\n        }\n    }\n\n    public static calculateScrollbarHeight(): number {\n        if (this.calculatedScrollbarHeight !== null)\n            return this.calculatedScrollbarHeight;\n\n        let scrollDiv = document.createElement(\"div\");\n        scrollDiv.className = \"p-scrollbar-measure\";\n        document.body.appendChild(scrollDiv);\n\n        let scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n        document.body.removeChild(scrollDiv);\n\n        this.calculatedScrollbarWidth = scrollbarHeight;\n\n        return scrollbarHeight;\n    }\n\n    public static invokeElementMethod(element: any, methodName: string, args?: any[]): void {\n        (element as any)[methodName].apply(element, args);\n    }\n\n    public static clearSelection(): void {\n        if (window.getSelection) {\n            if (window.getSelection().empty) {\n                window.getSelection().empty();\n            } else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n                window.getSelection().removeAllRanges();\n            }\n        }\n        else if (document['selection'] && document['selection'].empty) {\n            try {\n                document['selection'].empty();\n            } catch(error) {\n                //ignore IE bug\n            }\n        }\n    }\n\n    public static getBrowser() {\n        if (!this.browser) {\n            let matched = this.resolveUserAgent();\n            this.browser = {};\n\n            if (matched.browser) {\n                this.browser[matched.browser] = true;\n                this.browser['version'] = matched.version;\n            }\n\n            if (this.browser['chrome']) {\n                this.browser['webkit'] = true;\n            } else if (this.browser['webkit']) {\n                this.browser['safari'] = true;\n            }\n        }\n\n        return this.browser;\n    }\n\n    public static resolveUserAgent() {\n        let ua = navigator.userAgent.toLowerCase();\n        let match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) ||\n            /(webkit)[ \\/]([\\w.]+)/.exec(ua) ||\n            /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) ||\n            /(msie) ([\\w.]+)/.exec(ua) ||\n            ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) ||\n            [];\n\n        return {\n            browser: match[1] || \"\",\n            version: match[2] || \"0\"\n        };\n    }\n\n    public static isInteger(value): boolean {\n        if (Number.isInteger) {\n            return Number.isInteger(value);\n        }\n        else {\n            return typeof value === \"number\" && isFinite(value) &&  Math.floor(value) === value;\n        }\n    }\n\n    public static isHidden(element: HTMLElement): boolean {\n        return element.offsetParent === null;\n    }\n\n    public static getFocusableElements(element:HTMLElement) {\n        let focusableElements = DomHandler.find(element,`button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])`\n            );\n\n            let visibleFocusableElements = [];\n            for(let focusableElement of focusableElements) {\n                if (getComputedStyle(focusableElement).display != \"none\" && getComputedStyle(focusableElement).visibility != \"hidden\")\n                    visibleFocusableElements.push(focusableElement);\n            }\n        return visibleFocusableElements;\n    }\n\n    static generateZIndex() {\n        this.zindex = this.zindex||999;\n        return ++this.zindex;\n    }\n}\n","import {DomHandler} from './domhandler';\n\nexport class ConnectedOverlayScrollHandler {\n\n    element: any;\n\n    listener: any;\n\n    scrollableParents: any;\n\n    constructor(element: any, listener: any = () => {}) {\n        this.element = element;\n        this.listener = listener;\n    }\n\n    bindScrollListener() {\n        this.scrollableParents = DomHandler.getScrollableParents(this.element);\n        for (let i = 0; i < this.scrollableParents.length; i++) {\n            this.scrollableParents[i].addEventListener('scroll', this.listener);\n        }\n    }\n\n    unbindScrollListener() {\n        if (this.scrollableParents) {\n            for (let i = 0; i < this.scrollableParents.length; i++) {\n                this.scrollableParents[i].removeEventListener('scroll', this.listener);\n            }\n        }\n    }\n\n    destroy() {\n        this.unbindScrollListener();\n        this.element = null;\n        this.listener = null;\n        this.scrollableParents = null;\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}